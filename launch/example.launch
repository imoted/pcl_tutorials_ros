<launch>
  <arg name="example" default="filtering" />
  <arg name="number" default="0" />
  <arg name="realsense" default="false" />
  <arg name="gazebo" default="false" />
  <arg name="use_file" default="false" />
  <arg name="file" default="" />
  <arg name="cluster_tolerance" default="0.015"/>

  <group if="$(arg realsense)">
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster" 
      args="0 0 0.44 0 0.75 1.57 camera_link camera_diagonal_link" />
    <!-- http://wiki.ros.org/ja/tf -->
    <include file="$(find pcl_tutorials_ros)/launch/realsense.launch" >
      <arg name="tf_prefix" value="/camera_diagonal" />
    </include>
  </group>

  <group if="$(arg gazebo)">
    <include file="$(find pcl_tutorials_ros)/launch/gazebo.launch" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster" 
      args="0 0 0 -1.570796 0 -1.570796 camera_link camera_depth_optical_frame " />
  </group>

  <group if="$(arg use_file)">
    <arg name="file_name" value="$(find pcl_tutorials_ros)/samples/$(arg file)"/>
    <arg name="rate" value="0.1"/>

    <node pkg="pcl_ros" type="pcd_to_pointcloud" name="pcd_to_pointcloud" args="$(arg file_name) $(arg rate)" output="screen">
      <remap from="cloud_pcd" to="/camera/depth_registered/points"/>
      <param name="frame_id" value="camera_depth_optical_frame" />
    </node>

    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster" 
      args="0 0 0 -1.570796 0 -1.570796 camera_link camera_depth_optical_frame " />
  </group>

  <node name="pcl_example" pkg="pcl_tutorials_ros" type="$(arg example)" output="screen">
    <param name="number" value="$(arg number)" />
    <param name="cluster_tolerance" value="$(arg cluster_tolerance)" />
    <param name="input_frame" value="camera_diagonal_depth_optical_frame"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" respawn="false" 
    args="-d $(find pcl_tutorials_ros)/launch/config.rviz" output="screen" />
</launch>
